{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Axios PUT snippet": {
	 	"scope": "javascript,typescript",
	 	"prefix": "axios-put",
	 	"body": [
			"this.form.put('$1')",
			".then((response) => {",
			  "Toast.fire({icon: 'success', title: 'Save successfully!'});",
			  "'$2'",
			  "this.$Progress.finish();",
			"})",
			".catch(() => {",
			  "Toast.fire({icon:'error', title: 'Save Failed!'});",
			"});"
	 	],
	 	"description": "Axios put snippet"
	 },

	 "Axios POST snippet": {
		"scope": "javascript,typescript",
		"prefix": "axios-post",
		"body": [
		   "this.form.post('$1')",
		   ".then((response) => {",
			 "Toast.fire({icon: 'success', title: 'Save successfully!'});"	,
			 "$2",
			 "this.$Progress.finish();",
		  " })",
		   ".catch(() => {",
			 "Toast.fire({icon:'error', title: 'Save Failed!'});",
		   "});"
		],
		"description": "Axios post snippet"
	 },
	 "New Page": {
		"scope": "html",
		"prefix": "lesson",
		"body": [
			"<!--Page #-->",
			"<div class='lessons page'>",
				"\t<div class='content subpage' style='height: 100vh; overflow-y: scroll; overflow-x: hidden;'>",
					"\t\t<div class='topic-title'>",
						"\t\t\t<h5>TOPIC 1</h5>",
						"\t\t\t<h4>MINIMUM SPANNING TREE</h4>",
					"\t\t</div>",
					"\t\t<div class='topic-content'>",
					"\t\t</div>",
					"\t\t<p class='endPage'>---end of page. flip it.---</p>",
				"\t</div>",
			"</div>"
		],
		"description": "New Page"
	},
	 "Electron Start": {
		"scope": "js",
		"prefix": "ron-electron",
		"body": [
			"function createWindow () {",
				"\tconst win = new BrowserWindow({",
				  "\t\twidth: 800,",
				  "\t\theight: 600,",
				  "\t\twebPreferences: {",
					"\t\t\tnodeIntegration: true",
				  "\t\t}",
				"\t})",
			  
				"\twin.loadFile('index.html')",
				"\twin.webContents.openDevTools()",
			  "}",
			  
			  "app.whenReady().then(createWindow)",
			  
			  "app.on('window-all-closed', () => {",
				"\tif (process.platform !== 'darwin') {",
				  "\t\tapp.quit()",
				"\t}",
			  "})",
			  
			  "app.on('activate', () => {",
				"\tif (BrowserWindow.getAllWindows().length === 0) {",
				  "\t\tcreateWindow()",
				"\t}",
			  "})"
		],
		"description": "Initial code of electron JS"
	},

}